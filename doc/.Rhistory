temp.df <- colMeans(temp.df)
temp.df
temp.df <- cbind(
Farewell <-  corpuss.sent.result.fwl,
Inaug <- corpuss.sent.result.ina)
rnow(temp.df) <- c("anger", "anticipation", "disgust","fear","joy","sadness"
,"surprise" , "trust"    )
temp.df
temppp.tbl <- tbl_df(sentence.s.list) %>%
filter(type == "inaug")%>%
select(anger:trust)
temp.df <- as.data.frame(temppp.tbl)
temp.df <- colMeans(temp.df)
temp.df
temppp.tbl <- tbl_df(sentence.s.list) %>%
filter(type == "inaug")%>%
select(anger:trust)
temp.df <- as.data.frame(temppp.tbl)
temppp.tbl <- tbl_df(sentence.s.list) %>%
filter(type == "inaug")%>%
select(anger:trust)
temp.df <- as.data.frame(temppp.tbl)
temp.df <- colMeans(temp.df)
temppp.tbl <- tbl_df(sentence.s.list) %>%
filter(type == "Farewell")%>%
select(anger:trust)
temp.df <- as.data.frame(temppp.tbl)
temp.df <- colMeans(temp.df)
temp.df
temppp.tbl <- tbl_df(sentence.s.list) %>%
filter(type == "farewell")%>%
select(anger:trust)
temp.df <- as.data.frame(temppp.tbl)
temp.df <- colMeans(temp.df)
temp.df
temppp.tbl.i <- tbl_df(sentence.s.list) %>%
filter(type == "inaug")%>%
select(anger:trust)
temp.df <- as.data.frame(temppp.tbl)
temppp.tbl <- tbl_df(sentence.s.list) %>%
filter(type == "farewell")%>%
select(anger:trust)
temp.df <- as.data.frame(temppp.tbl)
temp.df <- colMeans(temp.df)
temp.df
temppp.tbl.i <- tbl_df(sentence.s.list) %>%
filter(type == "inaug")%>%
select(anger:trust)
temp.df.i <- as.data.frame(temppp.tbl.i)
temp.df.i <- colMeans(temp.df.i)
temp.df.i
temppp.tbl <- tbl_df(sentence.s.list) %>%
filter(type == "farewell")%>%
select(anger:trust)
temp.df <- as.data.frame(temppp.tbl)
temp.df <- colMeans(temp.df)
temp.df
temppp.tbl.i <- tbl_df(sentence.s.list) %>%
filter(type == "inaug")%>%
select(anger:trust)
temp.df.i <- as.data.frame(temppp.tbl.i)
temp.df.i <- colMeans(temp.df.i)
temp.df.i
temp.df.x <- rbind(temp.df,temp.df.i)
temp.df.x <- cbind(Group = factor(c("farewell","inaug")), temp.df.x)
ggradar(temp.df.x, grid.max = 1,
background.circle.colour = "#ffdd99",
background.circle.transparency = 0.5,
group.line.width = 1,
group.point.size = 3,
axis.label.size = 2,
gridline.min.colour = "#4b61ba",
gridline.mid.colour = "#a87963",
gridline.max.colour = "#e1e6ea",
grid.line.width = 1.5,
gridline.min.linetype = "longdash",
gridline.mid.linetype = "longdash",
gridline.max.linetype = "longdash")
temp.df.x <- rbind(temp.df,temp.df.i)
temp.df.x <- cbind(Group = factor(c("farewell","inaug")), temp.df.x)
rownames(temp.df) = c("farewell","inaug")
rownames(temp.df) = c("farewell","inaug")
temp.df.x <- rbind(temp.df,temp.df.i)
temp.df.x <- cbind(Group = factor(c("farewell","inaug")), temp.df.x)
temp.df.x <- rbind(temp.df,temp.df.i)
temp.df.x <- cbind(Group = factor(c("farewell","inaug")), temp.df.x)
rownames(temp.df.x) = c("farewell","inaug")
ggradar(temp.df.x, grid.max = 1,
background.circle.colour = "#ffdd99",
background.circle.transparency = 0.5,
group.line.width = 1,
group.point.size = 3,
axis.label.size = 2,
gridline.min.colour = "#4b61ba",
gridline.mid.colour = "#a87963",
gridline.max.colour = "#e1e6ea",
grid.line.width = 1.5,
gridline.min.linetype = "longdash",
gridline.mid.linetype = "longdash",
gridline.max.linetype = "longdash")
temppp.tbl <- tbl_df(sentence.s.list) %>%
filter(type == "farewell")%>%
select(anger:trust)
temp.df <- as.data.frame(temppp.tbl)
temp.df <- colMeans(temp.df)
temp.df
temppp.tbl.i <- tbl_df(sentence.s.list) %>%
filter(type == "inaug")%>%
select(anger:trust)
temp.df.i <- as.data.frame(temppp.tbl.i)
temp.df.i <- colMeans(temp.df.i)
temp.df.i
temp.df.x <- rbind(temp.df,temp.df.i) *10
temp.df.x <- cbind(Group = factor(c("farewell","inaug")), temp.df.x)
rownames(temp.df.x) = c("farewell","inaug")
ggradar(temp.df.x, grid.max = 1,
background.circle.colour = "#ffdd99",
background.circle.transparency = 0.5,
group.line.width = 1,
group.point.size = 3,
axis.label.size = 2,
gridline.min.colour = "#4b61ba",
gridline.mid.colour = "#a87963",
gridline.max.colour = "#e1e6ea",
grid.line.width = 1.5,
gridline.min.linetype = "longdash",
gridline.mid.linetype = "longdash",
gridline.max.linetype = "longdash")
ggradar(temp.df.x, grid.max = 1,
background.circle.colour = "#ffdd99",
background.circle.transparency = 0.5,
group.line.width = 1,
group.point.size = 3,
axis.label.size = 2,
gridline.min.colour = "#4b61ba",
gridline.mid.colour = "#a87963",
gridline.max.colour = "#e1e6ea",
grid.line.width = 1,
gridline.min.linetype = "longdash",
gridline.mid.linetype = "longdash",
gridline.max.linetype = "longdash")
ggradar(temp.df.x, grid.max = 1,
background.circle.colour = "#ffdd99",
background.circle.transparency = 0.05,
group.line.width = 1,
group.point.size = 3,
axis.label.size = 2,
gridline.min.colour = "#4b61ba",
gridline.mid.colour = "#a87963",
gridline.max.colour = "#e1e6ea",
grid.line.width = 1,
gridline.min.linetype = "longdash",
gridline.mid.linetype = "longdash",
gridline.max.linetype = "longdash")
ggradar(temp.df.x, grid.max = 1,
background.circle.colour = "#ffdd99",
background.circle.transparency = 0.5,
group.line.width = 1,
group.point.size = 3,
axis.label.size = 2,
gridline.min.colour = "#4b61ba",
gridline.mid.colour = "#a87963",
gridline.max.colour = "#e1e6ea",
grid.line.width = 1,
gridline.min.linetype = "longdash",
gridline.mid.linetype = "longdash",
gridline.max.linetype = "longdash")
ggradar(temp.df.x, grid.max = 1,
background.circle.colour = "#ffdd99",
background.circle.transparency = 0.5,
group.line.width = 1,
group.point.size = 3,
axis.label.size = 2,
gridline.min.colour = "#4b61ba",
gridline.mid.colour = "#a87963",
gridline.max.colour = "#e1e6ea",
grid.line.width = 1,
gridline.min.linetype = "longdash",
gridline.mid.linetype = "longdash",
gridline.max.linetype = "longdash",
legend.title = c("farewell","inaug"))
temp.df <- as.data.frame(temppp.tbl)
temp.df <- colMeans(temp.df)
temp.df
temppp.tbl.i <- tbl_df(sentence.s.list) %>%
filter(type == "inaug")%>%
select(anger:trust)
temp.df.i <- colMeans(temp.df.i)
temp.df.i
temp.df.x <- rbind(temp.df,temp.df.i) *10
temp.df.x <- cbind(Group = factor(c("farewell","inaug")), temp.df.x)
rownames(temp.df.x) = c("farewell","inaug")
ggradar(temp.df.x, grid.max = 1,
background.circle.colour = "#ffdd99",
background.circle.transparency = 0.5,
group.line.width = 1,
group.point.size = 3,
axis.label.size = 2,
gridline.min.colour = "#4b61ba",
gridline.mid.colour = "#a87963",
gridline.max.colour = "#e1e6ea",
grid.line.width = 1,
gridline.min.linetype = "longdash",
gridline.mid.linetype = "longdash",
gridline.max.linetype = "longdash",
legend.title = c("farewell","inaug"))
setwd("~/Desktop/ADS/GITHUB/Spr2017-Proj1-KaiChenColumbia/doc")
packages.used=c("rvest", "tibble", "qdap",
"sentimentr", "gplots", "dplyr",
"tm", "syuzhet", "factoextra",
"beeswarm", "scales", "RColorBrewer",
"RANN", "tm", "topicmodels", "wordcloud", "RColorBrewer",
"tidytext", "ggplot2","scales" )
# check packages that need to be installed.
packages.needed=setdiff(packages.used,
intersect(installed.packages()[,1],
packages.used))
# install additional packages
if(length(packages.needed)>0){
install.packages(packages.needed, dependencies = TRUE)
}
# load packages
library("rvest")
library("tibble")
library("qdap")
library("sentimentr")
library("gplots")
library("dplyr")
library("tm")
library("syuzhet")
library("factoextra")
library("beeswarm")
library("scales")
library("RColorBrewer")
library("RANN")
library("tm")
library("topicmodels")
library("wordcloud")
library("tidytext")
library("RColorBrewer")
library("ggplot2")
library("scales")
source("../lib/plotstacked.R")
source("../lib/speechFuncs.R")
source("../lib/kai_source.R")
source("../lib/ggradar.R")
print(R.version)
## Inauguaral speeches
main.page <- read_html(x = "http://www.presidency.ucsb.edu/inaugurals.php")
# inaug is used to store the text and url of a link
inaug=f.speechlinks(main.page)
# The last row is abnormal, so we remove it.
inaug <- inaug[-nrow(inaug),]
inaug.time <- as.Date(inaug[,1], format="%B %e, %Y")
#### Nomination speeches
main.page=read_html("http://www.presidency.ucsb.edu/nomination.php")
nomin <- f.speechlinks(main.page)
nomin.time <- as.Date(nomin[,1], format="%B %e, %Y")
#### Farewell speeches
main.page=read_html("http://www.presidency.ucsb.edu/farewell_addresses.php")
farewell <- f.speechlinks(main.page)
farewell.time <- as.Date(farewell[,1], format="%B %e, %Y")
#### Political Party, which will be explained in Step 5
main.page=read_html("http://www.presidency.ucsb.edu/platforms.php")
twoparty <- c("Democratic","Republican")
## We would pay a little bit more effort to finish the web scrapper
party <- f.speechlinks(main.page)
party <- party[!(party[,1]=="pdf"),]
party <- party[party[,1]==("Democratic")|(party[,1]=="Republican"),]
# We only use the data after 1856
party <- party[1:(nrow(party)-4),]
year.party <- rep(seq(2016, 1856, -4), each = 2)
# The length of the above vectors should be same!
nrow(party) == length(year.party)
party.list <- data.frame(Year = year.party,
Party = party$links,
url = party$urls,
stringsAsFactors = FALSE)
inaug.list=read.csv("../data/inauglist.csv", stringsAsFactors = FALSE)
nomin.list=read.csv("../data/nominlist.csv", stringsAsFactors = FALSE)
farewell.list=read.csv("../data/farewelllist.csv", stringsAsFactors = FALSE)
# Loop over each row in speech.list
speech.list$fulltext=NA
for(i in seq(nrow(speech.list))) {
text <- read_html(speech.list$urls[i]) %>% # load the page
html_nodes(".displaytext") %>% # isloate the text
html_text() # get the text
speech.list$fulltext[i]=text
# Create the file name
filename <- paste0("../data/fulltext/",
speech.list$type[i],
speech.list$File[i], "-",
speech.list$Term[i], ".txt")
sink(file = filename) %>% # open file to write
cat(text)  # write the file
sink() # close the file
}
## Inauguaral speeches
main.page <- read_html(x = "http://www.presidency.ucsb.edu/inaugurals.php")
# inaug is used to store the text and url of a link
inaug=f.speechlinks(main.page)
# The last row is abnormal, so we remove it.
inaug <- inaug[-nrow(inaug),]
inaug.time <- as.Date(inaug[,1], format="%B %e, %Y")
#### Nomination speeches
main.page=read_html("http://www.presidency.ucsb.edu/nomination.php")
nomin <- f.speechlinks(main.page)
nomin.time <- as.Date(nomin[,1], format="%B %e, %Y")
#### Farewell speeches
main.page=read_html("http://www.presidency.ucsb.edu/farewell_addresses.php")
farewell <- f.speechlinks(main.page)
farewell.time <- as.Date(farewell[,1], format="%B %e, %Y")
#### Political Party, which will be explained in Step 5
main.page=read_html("http://www.presidency.ucsb.edu/platforms.php")
twoparty <- c("Democratic","Republican")
## We would pay a little bit more effort to finish the web scrapper
party <- f.speechlinks(main.page)
party <- party[!(party[,1]=="pdf"),]
party <- party[party[,1]==("Democratic")|(party[,1]=="Republican"),]
# We only use the data after 1856
party <- party[1:(nrow(party)-4),]
year.party <- rep(seq(2016, 1856, -4), each = 2)
# The length of the above vectors should be same!
nrow(party) == length(year.party)
party.list <- data.frame(Year = year.party,
Party = party$links,
url = party$urls,
stringsAsFactors = FALSE)
## Inauguaral speeches
main.page <- read_html(x = "http://www.presidency.ucsb.edu/inaugurals.php")
# inaug is used to store the text and url of a link
inaug=f.speechlinks(main.page)
# The last row is abnormal, so we remove it.
inaug <- inaug[-nrow(inaug),]
inaug.time <- as.Date(inaug[,1], format="%B %e, %Y")
#### Nomination speeches
main.page=read_html("http://www.presidency.ucsb.edu/nomination.php")
nomin <- f.speechlinks(main.page)
nomin.time <- as.Date(nomin[,1], format="%B %e, %Y")
#### Farewell speeches
main.page=read_html("http://www.presidency.ucsb.edu/farewell_addresses.php")
farewell <- f.speechlinks(main.page)
farewell.time <- as.Date(farewell[,1], format="%B %e, %Y")
#### Political Party, which will be explained in Step 5
main.page=read_html("http://www.presidency.ucsb.edu/platforms.php")
twoparty <- c("Democratic","Republican")
## We would pay a little bit more effort to finish the web scrapper
party <- f.speechlinks(main.page)
party <- party[!(party[,1]=="pdf"),]
party <- party[party[,1]==("Democratic")|(party[,1]=="Republican"),]
# We only use the data after 1856
party <- party[1:(nrow(party)-4),]
year.party <- rep(seq(2016, 1856, -4), each = 2)
# The length of the above vectors should be same!
nrow(party) == length(year.party)
party.list <- data.frame(Year = year.party,
Party = party$links,
url = party$urls,
stringsAsFactors = FALSE)
inaug.list=read.csv("../data/inauglist.csv", stringsAsFactors = FALSE)
nomin.list=read.csv("../data/nominlist.csv", stringsAsFactors = FALSE)
farewell.list=read.csv("../data/farewelllist.csv", stringsAsFactors = FALSE)
speech.list=rbind(inaug.list, nomin.list, farewell.list)
speech.list$type=c(rep("inaug", nrow(inaug.list)),
rep("nomin", nrow(nomin.list)),
rep("farewell", nrow(farewell.list)))
speech.url=rbind(inaug, nomin, farewell)
speech.list=cbind(speech.list, speech.url)
# Loop over each row in speech.list
speech.list$fulltext=NA
for(i in seq(nrow(speech.list))) {
text <- read_html(speech.list$urls[i]) %>% # load the page
html_nodes(".displaytext") %>% # isloate the text
html_text() # get the text
speech.list$fulltext[i]=text
# Create the file
# filename <- paste0("../data/fulltext/",
#                    speech.list$type[i],
#                    speech.list$File[i], "-",
#                    speech.list$Term[i], ".txt")
# sink(file = filename) %>% # open file to write
# cat(text)  # write the file
# sink() # close the file
}
# Loop over each row in speech.list
speech.list$fulltext=NA
for(i in seq(nrow(speech.list))) {
text <- read_html(speech.list$urls[i]) %>% # load the page
html_nodes(".displaytext") %>% # isloate the text
html_text() # get the text
speech.list$fulltext[i]=text
# Create the file
# filename <- paste0("../data/fulltext/",
#                    speech.list$type[i],
#                    speech.list$File[i], "-",
#                    speech.list$Term[i], ".txt")
# sink(file = filename) %>% # open file to write
# cat(text)  # write the file
# sink() # close the file
}
# Loop over each row in speech.list
speech.list$fulltext=NA
for(i in seq(nrow(speech.list))) {
text <- read_html(speech.list$urls[i]) %>% # load the page
html_nodes(".displaytext") %>% # isloate the text
html_text() # get the text
speech.list$fulltext[i]=text
# Create the file
# filename <- paste0("../data/fulltext/",
#                    speech.list$type[i],
#                    speech.list$File[i], "-",
#                    speech.list$Term[i], ".txt")
# sink(file = filename) %>% # open file to write
# cat(text)  # write the file
# sink() # close the file
}
sentence.s.list=NULL
for(i in 1:nrow(speech.list)){
sentences=sent_detect(speech.list$fulltext[i],
endmarks = c("?", ".", "!", "|",";"))
if(length(sentences)>0){
emotions=get_nrc_sentiment(sentences)
word.count=word_count(sentences)
emotions=diag(1/(word.count+0.01))%*%as.matrix(emotions) #平均每个字
sentence.s.list=rbind(sentence.s.list,
cbind(speech.list[i,-ncol(speech.list)],
sentences=as.character(sentences),
word.count,
emotions,
sent.id=1:length(sentences)
)
)
}
}
load("/Users/kccolumbia/Desktop/333.RData")
temppp.tbl <- tbl_df(sentence.s.list) %>%
filter(type == "farewell")%>%
select(anger:trust)
temp.df <- as.data.frame(temppp.tbl)
temp.df <- colMeans(temp.df)
temp.df
temppp.tbl.i <- tbl_df(sentence.s.list) %>%
filter(type == "inaug")%>%
select(anger:trust)
temp.df.i <- as.data.frame(temppp.tbl.i)
temp.df.i <- colMeans(temp.df.i)
temp.df.i
temp.df.x <- rbind(temp.df,temp.df.i) *10
temp.df.x <- cbind(Group = factor(c("farewell","inaug")), temp.df.x)
rownames(temp.df.x) = c("farewell","inaug")
ggradar(temp.df.x, grid.max = 1,
background.circle.colour = "#ffdd99",
background.circle.transparency = 0.5,
group.line.width = 1,
group.point.size = 3,
axis.label.size = 2,
gridline.min.colour = "#4b61ba",
gridline.mid.colour = "#a87963",
gridline.max.colour = "#e1e6ea",
grid.line.width = 1,
gridline.min.linetype = "longdash",
gridline.mid.linetype = "longdash",
gridline.max.linetype = "longdash",
legend.title = c("farewell","inaug"),)
ggradar(temp.df.x, grid.max = 1,
background.circle.colour = "#ffdd99",
background.circle.transparency = 0.5,
group.line.width = 1,
group.point.size = 3,
axis.label.size = 2,
gridline.min.colour = "#4b61ba",
gridline.mid.colour = "#a87963",
gridline.max.colour = "#e1e6ea",
grid.line.width = 1,
gridline.min.linetype = "longdash",
gridline.mid.linetype = "longdash",
gridline.max.linetype = "longdash",
legend.title = c("farewell","inaug"))
temppp.tbl <- tbl_df(sentence.s.list) %>%
filter(type == "farewell")%>%
select(anger:trust)
temp.df <- as.data.frame(temppp.tbl)
temp.df <- colMeans(temp.df)
temp.df
temppp.tbl.i <- tbl_df(sentence.s.list) %>%
filter(type == "inaug")%>%
select(anger:trust)
temp.df.i <- as.data.frame(temppp.tbl.i)
temp.df.i <- colMeans(temp.df.i)
temp.df.i
temp.df.x <- rbind(temp.df,temp.df.i) *10
temp.df.x <- cbind(Group = factor(c("farewell","inaug")), temp.df.x)
rownames(temp.df.x) = c("farewell","inaug")
ggradar(temp.df.x, grid.max = 1,
background.circle.colour = "#ffdd99",
background.circle.transparency = 0.5,
group.line.width = 1,
group.point.size = 3,
axis.label.size = 2,
gridline.min.colour = "#4b61ba",
gridline.mid.colour = "#a87963",
gridline.max.colour = "#e1e6ea",
grid.line.width = 1,
gridline.min.linetype = "longdash",
gridline.mid.linetype = "longdash",
gridline.max.linetype = "longdash",
legend.title = c("farewell","inaug"))
0.49*0.02
0.49*0.02+0.01+0.025+0.012
(0.49*0.02+0.01+0.025+0.012)/9
(0.01+0.025+0.012)/9
(2.1^2*0.02+0.01+0.025+0.012)/9
