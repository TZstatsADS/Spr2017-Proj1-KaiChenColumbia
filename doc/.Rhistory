min = 1856, max = 2016, value=2016, step = 4)),
column(6, sliderInput('nwords', 'Max Number', 3,
min = 6, max = 100, value=40, step = 5)),
column(4, selectInput('party', 'Party', c("Democratic","Republican"),
selected="Democratic"))
),
fluidRow(
textOutput('text1'),
plotOutput('wordclouds', height = "400px")
)
),
server = function(input, output, session) {
# Combine the selected variables into a new data frame
selectedData <- reactive({
party.sel <- (party.tt$document == paste0(input$year,"-",input$party,".txt"))
pres.info <- findpresident(input$year)
inaug.sel <- (inaug.tt$document == paste0("inaug",pres.info$File,"-",pres.info$Term,".txt"))
list(party.term = party.tt$term[party.sel],
party.count = party.tt$count[party.sel],
inaug.term = inaug.tt$term[inaug.sel],
inaug.count =inaug.tt$count[inaug.sel],
name = pres.info$President,
pres.party = pres.info$Party
)})
output$wordclouds <- renderPlot(height = 400, {
par(mfrow=c(1,2), mar = c(0, 0, 3, 0))
wordcloud(selectedData()$party.term,
selectedData()$party.count,
scale=c(4,0.5),
max.words=input$nwords,
min.freq=1,
random.order=FALSE,
rot.per=0,
use.r.layout=FALSE,
random.color=FALSE,
colors=brewer.pal(RdBu)
)
wordcloud(selectedData()$inaug.term,
selectedData()$inaug.count,
scale=c(4,0.5),
max.words=input$nwords,
min.freq=1,
random.order=FALSE,
rot.per=0,
use.r.layout=FALSE,
random.color=FALSE,
colors=brewer.pal(PRGn)
)
})
output$text1 <- renderText({paste0("  ",selectedData()$name,"(", selectedData()$pres.party,")"," won the Election in ", input$year, " ! ")})
},
options = list(height = 1000)
)
library(shiny)
shinyApp(
ui = fluidPage(
fluidRow(style = "padding-bottom: 20px;",
column(6, sliderInput('year', 'Election Year', 3,
min = 1856, max = 2016, value=2016, step = 4)),
column(6, sliderInput('nwords', 'Max Number', 3,
min = 6, max = 100, value=40, step = 5)),
column(4, selectInput('party', 'Party', c("Democratic","Republican"),
selected="Democratic"))
),
fluidRow(
textOutput('text1'),
plotOutput('wordclouds', height = "400px")
)
),
server = function(input, output, session) {
# Combine the selected variables into a new data frame
selectedData <- reactive({
party.sel <- (party.tt$document == paste0(input$year,"-",input$party,".txt"))
pres.info <- findpresident(input$year)
inaug.sel <- (inaug.tt$document == paste0("inaug",pres.info$File,"-",pres.info$Term,".txt"))
list(party.term = party.tt$term[party.sel],
party.count = party.tt$count[party.sel],
inaug.term = inaug.tt$term[inaug.sel],
inaug.count =inaug.tt$count[inaug.sel],
name = pres.info$President,
pres.party = pres.info$Party
)})
output$wordclouds <- renderPlot(height = 400, {
par(mfrow=c(1,2), mar = c(0, 0, 3, 0))
wordcloud(selectedData()$party.term,
selectedData()$party.count,
scale=c(4,0.5),
max.words=input$nwords,
min.freq=1,
random.order=FALSE,
rot.per=0,
use.r.layout=FALSE,
random.color=FALSE,
colors=brewer.pal(10,"Blues"),
)
wordcloud(selectedData()$inaug.term,
selectedData()$inaug.count,
scale=c(4,0.5),
max.words=input$nwords,
min.freq=1,
random.order=FALSE,
rot.per=0,
use.r.layout=FALSE,
random.color=FALSE,
colors=brewer.pal(10,"Blues"),
)
})
output$text1 <- renderText({paste0("  ",selectedData()$name,"(", input$pres.party,")"," won the Election in ", input$year, " ! ")})
},
options = list(height = 1000)
)
library(shiny)
shinyApp(
ui = fluidPage(
fluidRow(style = "padding-bottom: 20px;",
column(6, sliderInput('year', 'Election Year', 3,
min = 1856, max = 2016, value=2016, step = 4)),
column(6, sliderInput('nwords', 'Max Number', 3,
min = 6, max = 100, value=40, step = 5)),
column(4, selectInput('party', 'Party', c("Democratic","Republican"),
selected="Democratic"))
),
fluidRow(
textOutput('text1'),
plotOutput('wordclouds', height = "400px")
)
),
server = function(input, output, session) {
# Combine the selected variables into a new data frame
selectedData <- reactive({
party.sel <- (party.tt$document == paste0(input$year,"-",input$party,".txt"))
pres.info <- findpresident(input$year)
inaug.sel <- (inaug.tt$document == paste0("inaug",pres.info$File,"-",pres.info$Term,".txt"))
list(party.term = party.tt$term[party.sel],
party.count = party.tt$count[party.sel],
inaug.term = inaug.tt$term[inaug.sel],
inaug.count =inaug.tt$count[inaug.sel],
name = pres.info$President,
pres.party = pres.info$Party
)})
output$wordclouds <- renderPlot(height = 400, {
par(mfrow=c(1,2), mar = c(0, 0, 3, 0))
wordcloud(selectedData()$party.term,
selectedData()$party.count,
scale=c(4,0.5),
max.words=input$nwords,
min.freq=1,
random.order=FALSE,
rot.per=0,
use.r.layout=FALSE,
random.color=FALSE,
colors=brewer.pal(10,"Pastel1")
)
wordcloud(selectedData()$inaug.term,
selectedData()$inaug.count,
scale=c(4,0.5),
max.words=input$nwords,
min.freq=1,
random.order=FALSE,
rot.per=0,
use.r.layout=FALSE,
random.color=FALSE,
colors=brewer.pal(10,"Pastel2")
)
})
output$text1 <- renderText({paste0("  ",selectedData()$name,"(", selectedData()$pres.party,")"," won the Election in ", input$year, " ! ")})
},
options = list(height = 1000)
)
library(shiny)
shinyApp(
ui = fluidPage(
fluidRow(style = "padding-bottom: 20px;",
column(6, sliderInput('year', 'Election Year', 3,
min = 1856, max = 2016, value=2016, step = 4)),
column(6, sliderInput('nwords', 'Max Number', 3,
min = 6, max = 100, value=40, step = 5)),
column(4, selectInput('party', 'Party', c("Democratic","Republican"),
selected="Democratic"))
),
fluidRow(
textOutput('text1'),
plotOutput('wordclouds', height = "400px")
)
),
server = function(input, output, session) {
# Combine the selected variables into a new data frame
selectedData <- reactive({
party.sel <- (party.tt$document == paste0(input$year,"-",input$party,".txt"))
pres.info <- findpresident(input$year)
inaug.sel <- (inaug.tt$document == paste0("inaug",pres.info$File,"-",pres.info$Term,".txt"))
list(party.term = party.tt$term[party.sel],
party.count = party.tt$count[party.sel],
inaug.term = inaug.tt$term[inaug.sel],
inaug.count =inaug.tt$count[inaug.sel],
name = pres.info$President,
pres.party = pres.info$Party
)})
output$wordclouds <- renderPlot(height = 400, {
par(mfrow=c(1,2), mar = c(0, 0, 3, 0))
wordcloud(selectedData()$party.term,
selectedData()$party.count,
scale=c(4,0.5),
max.words=input$nwords,
min.freq=1,
random.order=FALSE,
rot.per=0,
use.r.layout=FALSE,
random.color=FALSE,
colors=brewer.pal(10,"Blues")
)
wordcloud(selectedData()$inaug.term,
selectedData()$inaug.count,
scale=c(4,0.5),
max.words=input$nwords,
min.freq=1,
random.order=FALSE,
rot.per=0,
use.r.layout=FALSE,
random.color=FALSE,
colors=brewer.pal(10,"Dark2")
)
})
output$text1 <- renderText({paste0("  ",selectedData()$name,"(", selectedData()$pres.party,")"," won the Election in ", input$year, " ! ")})
},
options = list(height = 1000)
)
library(shiny)
shinyApp(
ui = fluidPage(
fluidRow(style = "padding-bottom: 20px;",
column(6, sliderInput('year', 'Election Year', 3,
min = 1856, max = 2016, value=2016, step = 4)),
column(6, sliderInput('nwords', 'Max Number', 3,
min = 6, max = 100, value=40, step = 5)),
column(4, selectInput('party', 'Party', c("Democratic","Republican"),
selected="Democratic"))
),
fluidRow(
textOutput('text1'),
plotOutput('wordclouds', height = "400px")
)
),
server = function(input, output, session) {
# Combine the selected variables into a new data frame
selectedData <- reactive({
party.sel <- (party.tt$document == paste0(input$year,"-",input$party,".txt"))
pres.info <- findpresident(input$year)
inaug.sel <- (inaug.tt$document == paste0("inaug",pres.info$File,"-",pres.info$Term,".txt"))
list(party.term = party.tt$term[party.sel],
party.count = party.tt$count[party.sel],
inaug.term = inaug.tt$term[inaug.sel],
inaug.count =inaug.tt$count[inaug.sel],
name = pres.info$President,
pres.party = pres.info$Party
)})
output$wordclouds <- renderPlot(height = 400, {
par(mfrow=c(1,2), mar = c(0, 0, 3, 0))
wordcloud(selectedData()$party.term,
selectedData()$party.count,
scale=c(4,0.5),
max.words=input$nwords,
min.freq=1,
random.order=FALSE,
rot.per=0,
use.r.layout=FALSE,
random.color=FALSE,
colors=brewer.pal(10,"Dark2")
)
wordcloud(selectedData()$inaug.term,
selectedData()$inaug.count,
scale=c(4,0.5),
max.words=input$nwords,
min.freq=1,
random.order=FALSE,
rot.per=0,
use.r.layout=FALSE,
random.color=FALSE,
colors=brewer.pal(10,"Blues")
)
})
output$text1 <- renderText({paste0("  ",selectedData()$name,"(", selectedData()$pres.party,")"," won the Election in ", input$year, " ! ")})
},
options = list(height = 1000)
)
library(shiny)
shinyApp(
ui = fluidPage(
fluidRow(style = "padding-bottom: 20px;",
column(6, sliderInput('year', 'Election Year', 3,
min = 1856, max = 2016, value=2016, step = 4)),
column(6, sliderInput('nwords', 'Max Number', 3,
min = 6, max = 100, value=40, step = 5)),
column(4, selectInput('party', 'Party', c("Democratic","Republican"),
selected="Democratic"))
),
fluidRow(
textOutput('text1'),
plotOutput('wordclouds', height = "400px")
)
),
server = function(input, output, session) {
# Combine the selected variables into a new data frame
selectedData <- reactive({
party.sel <- (party.tt$document == paste0(input$year,"-",input$party,".txt"))
pres.info <- findpresident(input$year)
inaug.sel <- (inaug.tt$document == paste0("inaug",pres.info$File,"-",pres.info$Term,".txt"))
list(party.term = party.tt$term[party.sel],
party.count = party.tt$count[party.sel],
inaug.term = inaug.tt$term[inaug.sel],
inaug.count =inaug.tt$count[inaug.sel],
name = pres.info$President,
pres.party = pres.info$Party
)})
output$wordclouds <- renderPlot(height = 400, {
par(mfrow=c(1,2), mar = c(0, 0, 3, 0))
wordcloud(selectedData()$party.term,
selectedData()$party.count,
scale=c(4,0.5),
max.words=input$nwords,
min.freq=1,
random.order=FALSE,
rot.per=0,
use.r.layout=FALSE,
random.color=FALSE,
colors=brewer.pal(10,"Dark2")
)
wordcloud(selectedData()$inaug.term,
selectedData()$inaug.count,
scale=c(4,0.5),
max.words=input$nwords,
min.freq=1,
random.order=FALSE,
rot.per=0,
use.r.layout=FALSE,
random.color=FALSE,
colors=brewer.pal(10,"Blues")
)
})
output$text1 <- renderText({paste0("  ",selectedData()$name,"(", selectedData()$pres.party,")"," won the Election in ", input$year, " ! ")})
},
options = list(height = 1000)
)
library(shiny)
shinyApp(
ui = fluidPage(
fluidRow(style = "padding-bottom: 20px;",
column(6, sliderInput('year', 'Election Year', 3,
min = 1856, max = 2016, value=2016, step = 4)),
column(6, sliderInput('nwords', 'Max Number', 3,
min = 6, max = 100, value=40, step = 5)),
column(4, selectInput('party', 'Party', c("Democratic","Republican"),
selected="Democratic"))
),
fluidRow(
textOutput('text1'),
plotOutput('wordclouds', height = "400px")
)
),
server = function(input, output, session) {
# Combine the selected variables into a new data frame
selectedData <- reactive({
party.sel <- (party.tt$document == paste0(input$year,"-",input$party,".txt"))
pres.info <- findpresident(input$year)
inaug.sel <- (inaug.tt$document == paste0("inaug",pres.info$File,"-",pres.info$Term,".txt"))
list(party.term = party.tt$term[party.sel],
party.count = party.tt$count[party.sel],
inaug.term = inaug.tt$term[inaug.sel],
inaug.count =inaug.tt$count[inaug.sel],
name = pres.info$President,
pres.party = pres.info$Party
)})
output$wordclouds <- renderPlot(height = 400, {
par(mfrow=c(1,2), mar = c(0, 0, 3, 0))
wordcloud(selectedData()$party.term,
selectedData()$party.count,
scale=c(4,0.5),
max.words=input$nwords,
min.freq=1,
random.order=FALSE,
rot.per=0,
use.r.layout=FALSE,
random.color=FALSE,
colors=brewer.pal(10,"Dark2")
)
wordcloud(selectedData()$inaug.term,
selectedData()$inaug.count,
scale=c(4,0.5),
max.words=input$nwords,
min.freq=1,
random.order=FALSE,
rot.per=0,
use.r.layout=FALSE,
random.color=FALSE,
colors=brewer.pal(10,"Blues")
)
})
output$text1 <- renderText({paste0("  ",selectedData()$name,"(", selectedData()$pres.party,")"," won the Election in ", input$year, " ! ")})
},
options = list(height = 1000)
)
DirSource(folder.path)
folder.path <- "../data/PartyText/"
DirSource(folder.path)
str(DirSource(folder.path))
(DirSource(folder.path))
Corpus()
?Corpus()
?comparison.cloud()
data(SOTU)
SOTU
packages.used=c("rvest", "tibble", "qdap",
"sentimentr", "gplots", "dplyr",
"tm", "syuzhet", "factoextra",
"beeswarm", "scales", "RColorBrewer",
"RANN", "tm", "topicmodels", "wordcloud", "RColorBrewer",
"tidytext")
# check packages that need to be installed.
packages.needed=setdiff(packages.used,
intersect(installed.packages()[,1],
packages.used))
# install additional packages
if(length(packages.needed)>0){
install.packages(packages.needed, dependencies = TRUE)
}
# load packages
library("rvest")
library("tibble")
library("qdap")
library("sentimentr")
library("gplots")
library("dplyr")
library("tm")
library("syuzhet")
library("factoextra")
library("beeswarm")
library("scales")
library("RColorBrewer")
library("RANN")
library("tm")
library("topicmodels")
library("wordcloud")
library("tidytext")
library("RColorBrewer")
source("../lib/plotstacked.R")
source("../lib/speechFuncs.R")
source("../lib/kai_source.R")
inaug.path <- "../data/InauguralSpeeches/"
inaug.c <- Create_processed_corpus(inaug.path)
inaug.tt <- TermDocumentMatrix(inaug.c,
control = list(weighting = function(x)
weightTfIdf(x, normalize =F),
stopwords = TRUE))
inaug.path
Create_processed_corpus(inaug.path)
inaug.c
inaug.tt <- TermDocumentMatrix(inaug.c,
control = list(weighting = function(x)
weightTfIdf(x, normalize =F),
stopwords = TRUE))
inaug.path <- "../data/InauguralSpeeches/"
inaug.c <- Create_processed_corpus(inaug.path)
inaug.tt <- TermDocumentMatrix(inaug.c,
control = list(weighting = function(x)
weightTfIdf(x, normalize =F),
stopwords = TRUE))
inaug.path <- "../data/InauguralSpeeches/"
inaug.c <- Create_processed_corpus(inaug.path)
inaug.tt <- TermDocumentMatrix(inaug.c,
control = list(weighting = function(x)
weightTfIdf(x, normalize =F),
stopwords = TRUE))
packages.used=c("rvest", "tibble", "qdap",
"sentimentr", "gplots", "dplyr",
"tm", "syuzhet", "factoextra",
"beeswarm", "scales", "RColorBrewer",
"RANN", "tm", "topicmodels", "wordcloud", "RColorBrewer",
"tidytext")
# check packages that need to be installed.
packages.needed=setdiff(packages.used,
intersect(installed.packages()[,1],
packages.used))
# install additional packages
if(length(packages.needed)>0){
install.packages(packages.needed, dependencies = TRUE)
}
# load packages
library("rvest")
library("tibble")
library("qdap")
library("sentimentr")
library("gplots")
library("dplyr")
library("tm")
library("syuzhet")
library("factoextra")
library("beeswarm")
library("scales")
library("RColorBrewer")
library("RANN")
library("tm")
library("topicmodels")
library("wordcloud")
library("tidytext")
library("RColorBrewer")
source("../lib/plotstacked.R")
source("../lib/speechFuncs.R")
source("../lib/kai_source.R")
inaug.path <- "../data/InauguralSpeeches/"
inaug.c <- Create_processed_corpus(inaug.path)
inaug.c <- Create_tdm_tidy(inaug.path)
inaug.c <- Create_processed_corpus(inaug.path)
