length(x)
length(y)
y <- c(.4,.9,.4,-.3,.3,.8,.7,-.4,-.2,.7)
length(y)
lm(y ~ x)
lm1 <- lm(y ~ x)
sum(residuals(lm1)^2)
8*0.4352/0.45
x <- c(.3,1.4,1,-.3,-.2,1,2,1,-1,-.7,.7)
y <- c(.4,.9,.4,-.3,.3,.8,.7,-.4,-.2,.7)
plot(0,0,xlim=x(-2,2), ylim=c(-2,2))
plot(xx,xx,xlim=x(-2,2), ylim=c(-2,2), type = "n")
xx = 0
plot(xx,xx,xlim=x(-2,2), ylim=c(-2,2), type = "n")
plot(xx,xx,xlim=c(-2,2), ylim=c(-2,2), type = "n")
lower <- function(x){
return(0.1472 + 0.4352 *x - 0.7087 * (0.1 + (x-.42)^2 / 8.396) ^ .5)
}
curve(lower)
plot(xx,xx,xlim=c(-2,2), ylim=c(-2,2), type = "n")
plot(xx,xx,xlim=c(-2,2), ylim=c(-2,2), type = "n")
lower <- function(x){
return(0.1472 + 0.4352 *x - 0.7087 * (0.1 + (x-.42)^2 / 8.396) ^ .5)
}
curve(lower, add = T)
above <- function(x){
return(0.1472 + 0.4352 *x + 0.7087 * (0.1 + (x-.42)^2 / 8.396) ^ .5)
}
curve(above, add = T, type = "o")
curve(above, add = T, type = 2)
curve(above, add = T, type = "+")
curve(above, add = T, col = 2)
curve(above, add = T, col = 2, lwd = 2)
curve(above, add = T, col = 2, lwd = 3)
curve(lower, add = T, col = 1, lwd = 3)
curve(above, add = T, col = 2, lwd = 3)
qt(0.975,df = 8)
plot(xx,xx,xlim=c(-2,2), ylim=c(-2,2), type = "n")
lower <- function(x){
return(0.1472 + 0.4352 *x - 0.7087 * (0.1 + (x-.42)^2 / 8.396) ^ .5)
}
above <- function(x){
return(0.1472 + 0.4352 *x + 0.7087 * (0.1 + (x-.42)^2 / 8.396) ^ .5)
}
curve(lower, add = T, col = 1, lwd = 3)
curve(above, add = T, col = 2, lwd = 3)
2.306 * sqrt(0.0563)
above.b <- function(x){
return(0.1472 + 0.4352 *x + 0.54716 (1 + 0.1 + (x-.42)^2 / 8.396) ^ .5)
}
lower.b <- function(x){
return(0.1472 + 0.4352 *x - 0.54716 (1 + 0.1 + (x-.42)^2 / 8.396) ^ .5)
}
curve(lower.b, add = T, col = 1, lwd = 3)
plot(xx,xx,xlim=c(-2,2), ylim=c(-2,2), type = "n")
lower.a <- function(x){
return(0.1472 + 0.4352 *x - 0.7087 * (0.1 + (x-.42)^2 / 8.396) ^ .5)
}
above.a <- function(x){
return(0.1472 + 0.4352 *x + 0.7087 * (0.1 + (x-.42)^2 / 8.396) ^ .5)
}
curve(lower.a, add = T, col = 1, lwd = 3)
curve(above.a, add = T, col = 2, lwd = 3)
lower.b <- function(x){
return(0.1472 + 0.4352 * x - 0.54716 (1 + 0.1 + (x-.42)^2 / 8.396) ^ .5)
}
curve(lower.b, add = T, col = 3, lwd = 3)
above.b <- function(x){
return(0.1472 + 0.4352 *x + 0.54716 (1 + 0.1 + (x-.42)^2 / 8.396) ^ .5)
}
curve(above.b, add = T, col = 4, lwd = 3)
above.b <- function(x){
return(0.1472 + 0.4352 *x + 0.54716 (1 + 0.1 + (x-.42)^2 / 8.396) ^ .5)
}
curve(above.b, add = T, col = 4, lwd = 3)
lower.b
lower.b(2)
lower.b(1)
lowerb <- function(x){
return(0.1472 + 0.4352 * x - 0.54716 (1 + 0.1 + (x-.42)^2 / 8.396) ^ .5)
}
lowerb(1)
?plot
xx = -2:2
plot(xx,xx,xlim=c(-2,2), ylim=c(-2,2), type = "n")
plot(xx,xx,xlim=c(-2,2), ylim=c(-2,2), type = "n")
grid()
sqrt(0/441)
sqrt(0.441)
sqrt(18430)
exp(2.431)
exp(4.905)
exp(4.906)
sqrt(0.0564)
sqrt(0.0564)*0.236
0.0564*0.236
2.306*sqrt(0.0563)
qt(0.975,df=8)
qt(0.975,df=8)
qt(0.975,df=8)*sqrt(0.0563)
qt(0.975,df=8)*sqrt(0.0563)
summary(lm2)
library("ISLR")
head(USArrests)
?scale\
?scale
USArrests <- apply(USArrests, 2, scale)
head(USArrests)
USArrests <- apply(USArrests, 2, scale)
head(USArrests)
USArrests <- apply(USArrests, 2, scale)
head(USArrests)
pca <- prcomp(USArrests)
pca
?prcomp
biplot(pca)
summary(pca)
?kmeans()
x <- matrix(rnorm(50*2), ncol = 2)
dim(x)
> x[1:25, 1] <- x[1:25, 1] + 3
> x[1:25, 2] <- x[1:25, 2] - 4
x <- matrix(rnorm(50*2), ncol = 2)
x[1:25, 1] <- x[1:25, 1] + 3
x[1:25, 2] <- x[1:25, 2] - 4
km.out <- kmeans(x, centers = 2, nstart = 20)
km.out
km.out <- kmeans(x, centers = 2, nstart = 1)
km.out
x11.2 <- matrix(c(1.9,0.8,1.1,0.1,-0.1,4.4,4.6,1.6,5.5,3.4,66,62,64,61,63,70,68,62,68,66), nrow = 10)
x11.2
y11.2 <-c(0.7,-1.0,-0.2,-1.2,-0.1,3.4,0,0.8,3.7,2.0)
length(11.2)
length(y11.2)
y11.2 <- matrix(y11.2,nrow=10)
dim(y11.2)
x11.2 <- cbind(rep(10),y11.2)
x11.2 <- matrix(c(1.9,0.8,1.1,0.1,-0.1,4.4,4.6,1.6,5.5,3.4,66,62,64,61,63,70,68,62,68,66), nrow = 10)
x11.2 <- cbind(rep(10),x11.2)
x11.2
x11.2 <- cbind(rep(1,10),x11.2)
x11.2 <- matrix(c(1.9,0.8,1.1,0.1,-0.1,4.4,4.6,1.6,5.5,3.4,66,62,64,61,63,70,68,62,68,66), nrow = 10)
x11.2 <- cbind(1,x11.2)
x11.2
solve(t(x11.2) %*% x11.2) %*% t(x11.2) %*% y11.2
.1 * t(y11.2 - x11.2 %*% solve(t(x11.2) %*% x11.2) %*% t(x11.2) %*% y11.2) %*% (y11.2 - x11.2 %*% solve(t(x11.2) %*% x11.2) %*% t(x11.2) %*% y11.2)
solve(t(x11.2) %*% x11.2)
0.8865/(0.1355)^.5
(0.8865/(0.1355)^.5)/sqrt(7)
1/((0.8865/(0.1355)^.5)/sqrt(7))
1/((0.8865*10/7/(0.1355)^.5)
)
1/((0.8865*10/7/0.1355)^.5)
8.8865 /(7*.1355)
1/(8.8865 /(7*.1355))
1/(8.8865 /(7*.1355)).5
1/((8.8865 /(7*.1355)).5)
1/((8.8865 /(7*0.1355)).5)
1/((8.8865/(7*0.1355)).5)
1/((8.8865/(7*0.1355))^.5)
((8.8865/(7*0.1355))^.5)
0.1355*8.865/7
sqrt(0.1355*8.865/7)
0.45/sqrt(0.1355*8.865/7)
lm111  <- lm( y11.2 ~ x11.2)
lm111
lm111  <- lm( y11.2 ~ x11.2 -1)
lm111  <- lm( y11.2 ~ x11.2 -1)
lm111
summary(lm111)
var(y11.2) *9
residuals(lm1)
residuals(lm111) ^ 2
sum(residuals(lm111) ^ 2)
8.865399 / 26.309
1-8.865399 / 26.309
1-8.865399 / 26.309
summary(lm111)
1.125*9
x11.2
[,1] [,2] [,3]
[1,]   10  1.9   66
[2,]   10  0.8   62
[3,]   10  1.1   64
[4,]   10  0.1   61
[5,]   10 -0.1   63
[6,]   10  4.4   70
[7,]   10  4.6   68
[8,]   10  1.6   62
[9,]   10  5.5   68
[10,]   10  3.4   66
x11.2 <- matrix(c(1.9,0.8,1.1,0.1,-0.1,4.4,4.6,1.6,5.5,3.4,66,62,64,61,63,70,68,62,68,66), nrow = 10)
x11.2 <- cbind(1, x11.2)
y11.2 <-matrix(c(0.7,-1.0,-0.2,-1.2,-0.1,3.4,0,0.8,3.7,2.0),nrow = 10)
x11.2 <- matrix(c(1.9,0.8,1.1,0.1,-0.1,4.4,4.6,1.6,5.5,3.4,66,62,64,61,63,70,68,62,68,66), nrow = 10)
x11.2 <- cbind(1, x11.2)
y11.2 <-matrix(c(0.7,-1.0,-0.2,-1.2,-0.1,3.4,0,0.8,3.7,2.0),nrow = 10)
# Use the definition
lm11.2 <- lm(y11.2 ~ x11.2)
lm11.2
lm11.2 <- lm(y11.2 ~ x11.2 - 1)
lm11.2
1 - (residuals(lm11.2)^2)/(9 * var(y11.2))
1 - (sum(residuals(lm11.2)^2))/(9 * var(y11.2))
summary(lm11.2)
1 - (sum(residuals(lm11.2)^2))/(9 * var(y11.2))
x11.2 %*% solve(t(x11.2) %*% x11.2 ) %*% t(x11.2)
PP <- x11.2 %*% solve(t(x11.2) %*% x11.2 ) %*% t(x11.2)
t(y11.2) %*% PP %*% y11.2
x11.2
x11.2 <- x11.2[,1]
PP1 <- x11.2 %*% solve(t(x11.2) %*% x11.2 ) %*% t(x11.2)
t(y11.2) %*% PP1 %*% y11.2
x11.2
y11.2
x <- seq(-5,5,by = 50)
plot(x,dt(x), type = "l")
plot(x,dt(x, df = 1), type = "l")
plot(x,dt(x, df = 1), type = "l")
x <- seq(-5,5,by = 50)
plot(x,dt(x, df = 1), type = "l")
x <- seq(-5,5,by = 50)
x
x <- seq(-5,5,by =0.01)
plot(x,dt(x, df = 1), type = "l")
plot(x,dt(x, df = 1), type = "l")
x <- seq(-5,5,by =0.01)
plot(x,dt(x, df = 1), type = "l")
plot(x,dt(x, df = 2), type = "l")
plot(x,dt(x, df = 5), type = "l")
plot(x,dt(x, df = 30), type = "l")
plot(x,dt(x, df = 100), type = "l")
x <- seq(-5,5,by =0.01)
plot(x,dt(x, df = 1), type = "l")
lines(x,dt(x, df = 2), type = "l")
lines(x,dt(x, df = 5), type = "l")
lines(x,dt(x, df = 30), type = "l")
lines(x,dt(x, df = 100), type = "l")
lines(x,dnorm(x))
lines(x,dnorm(x), col = "red")
1 - pgamma(2,2,1)
plot(x,dgamma(x, shape = 2, scale = 1), type = "l")
plot(x,dgamma(x, shape = 2, scale = 1), type = "l")
plot(x,dgamma(x, shape = 2, scale = 1), type = "l")
lines(x,dgamma(x, shape = 3, scale = 1), type = "l")
plot(x,dgamma(x, shape = 2, scale = 1), type = "l")
lines(x,dgamma(x, shape = 3, scale = 1), type = "l")
lines(x,dgamma(x, shape = 4, scale = 1), type = "l")
lines(x,dgamma(x, shape = 5, scale = 1), type = "l")
lines(x,dgamma(x, shape = 6, scale = 1), type = "l")
190 + 0.5 -  200
-9.5 / ((1000*0.2*0.8).5)
-9.5 / ((1000*0.2*0.8)^.5)
qnorm(-9.5 / ((1000*0.2*0.8)^.5))
pnorm(-9.5 / ((1000*0.2*0.8)^.5))
pbinom(190, 1000, 0.2)
sample(c(1,2), size = 3, replace = T)
sample(c(1,2), size = 3, replace = F)
sample(c(1,2), size = 3)
sample(c(1,2), size = 3, replace = T)
sample(c(1,2), size = 3, p = c(0.1,0.2,0.4), replace = T)
sample(c(1,2), size = 3, p = c(0.1,0.2), replace = T)
sample(c(1,2), size = 3, p = c(1,0), replace = T)
sample(c(1,2), size = 3, p = c(1,100), replace = T)
sample(c(1,2), size = 3, p = c(1,23,), replace = T)
sample(c(1,2), size = 3, p = c(1,23,3), replace = T)
sample(c(1,2), size = 3, p = c(1), replace = T)
sample(c(1,2), size = 3, p = 1, replace = T)
sample(1:6, size = 100, replace = TRUE)
table(sample(1:6, size = 100, replace = TRUE))
table(sample(1:6, size = 100, replace = TRUE))
table(sample(1:6, size = 10000, replace = TRUE))
table(floor(runif(10000, 0, 6)))
U <- runif(1, 0, 1)
u <- runif(1000, min = 0, max = 1)
Finverse<- function(u, lambda){
res <- ifelse((u > 1)|(u < 0), 0, - log(1-u)/lambda)
return(res)
}
hist(Finverse(u))
hist(Finverse(u, lambda = 2))
lines(1:4, 2 * exp(- 2 * (1:4))
)
hist(Finverse(u, lambda = 2), probability = T)
lines(1:4, 2 * exp(- 2 * (1:4)))
lines(seq(0,4,0.01), 2 * exp(- 2 * seq(0,4,0.01)))
lines(seq(0,4,0.01), 2 * exp(- 2 * seq(0,4,0.01)))
Finverse2 <- function(u){u^(1/3)}
Finverse2 <- function(u){u^(1/3) * (abs(u-0.5)<0.5)}
hist(Finverse2(rnorm(1000)))
hist(Finverse2(rnorm(1000)),prob = T)
hist(Finverse2(runif(1000)),prob = T)
lines(seq(0,1,0.01), 3 * (seq(0,1,0.01))^2)
x <- seq(0,1,by = 0.0001)
fx <- function(x){return(60 * x^3 * (1 - x)^2)}
max(fx(x))
GU <- runif(1000, 0, 2.1)
U <- runif(1000,0,1)
library(MASS)
head(cats)
hist(cats$Hwt)
ecdf(cats$Hwt)
quantile(cats$Hwt,0.5)
plot(ecdf(cats$Hwt))
density(cats$Hwt)
plot(density(cats$Hwt))
gamma.MMest <- function(vec){
m <- mean(vec)
v <- var(vec)
return(c(m^2/v, v/m))
}
gamma.MMest(cats$Hwt)
gamma.ll <- function(vec, data){
LL <- product(dgamma(data, shape = vec[1], scale = vec[2]))
return(LL)
}
gamma.ll(vec = c(19,0.5), data = cats$Hwt)
gamma.ll <- function(vec, data){
LL <- prod(dgamma(data, shape = vec[1], scale = vec[2]))
return(LL)
}
gamma.ll(vec = c(19,0.5), data = cats$Hwt)
gamma.ll <- function(vec, data){
LL <- prod(dgamma(data, shape = vec[1], scale = vec[2], log = T))
return(LL)
}
gamma.ll <- function(vec, data){
LL <- sum(dgamma(data, shape = vec[1], scale = vec[2], log = T))
return(LL)
}
gamma.ll(vec = c(19,0.5), data = cats$Hwt)
gamma.ll <- function(vec, data){
LL <- sum(dgamma(data, shape = vec[1], scale = vec[2], log = T))
return(LL)
}
gamma.ll <- function(vec, data){
LL <- sum(dgamma(data, shape = vec[1], scale = vec[2], log = T))
return(LL)
}
gamma.ll(vec = c(19,0.5), data = cats$Hwt)
gamma.ll <- function(vec, data){
LL <- sum(dgamma(data, shape = vec[1], scale = vec[2], log = T))
return(LL)
}
gamma.ll(vec = c(19,0.5), data = cats$Hwt)
gamma.ll(vec = c(19,0.05), data = cats$Hwt)
gamma.ll.neg <- function(vec, data){
LL <- -sum(dgamma(data, shape = vec[1], scale = vec[2], log = T))
return(LL)
}
nlm(gamma.ll.neg, c(20,1), data = cats$Hwt)
nlm(gamma.ll.neg, c(20,1), data = cats$Hwt)$minimum
nlm(gamma.ll.neg, c(20,1), data = cats$Hwt)$est
nlm(gamma.ll.neg, c(20,1), data = cats$Hwt)$e
nlm(gamma.ll.neg, c(20,1), data = cats$Hwt)$estimatess
nlm(gamma.ll.neg, c(20,1), data = cats$Hwt)$estimate
nlm(gamma.ll.neg, c(20,1), data = cats$Hwt)$estimates
nlm(gamma.ll.neg, c(20,1), data = cats$Hwt)$estimate
nlm(gamma.ll.neg, c(20,1), data = cats$Hwt)$minimum
nlm(gamma.ll.neg, c(20,1), data = cats$Hwt)$estimate
qgamma(0.01,19,1)
qgamma(0.001,19,1)
qgamma(0.099,19,1)
qgamma(0.99,19,1)
qgamma(0.9999,19,1)
qgamma(0.9999999999,19,1)
qgamma(1,19,1)
?qqplot
1.94*13
8,54
8.54
pf(4.87,2,10)
1- pf(4.87,2,10)
hist(c(1,2,3), Prob = t)
hist(c(1,2,3), Prob = T)
hist(c(1,2,3), Prob = T)
hist(c(1,2,3), prob = T)
hist(c(1,2,3), prob = T)
hist(c(1,2,3), prob = T)
hist(c(1,2,3,5,3,1,12), prob = T)
hist(c(1,2,3,5,3,1,12), Prob = T)
hist(c(1,2,3,5,3,1,12), probability = T)
hist(c(1,2,3,5,3,1,12), probability = T)
curve(density(qgamma(1:99/100, shape = 19, scale = 45)))
qgamma(1:99/100, shape = 19, scale = 45)
curve(density(qgamma(1:99/100, shape = 19, scale = 45)))
curve(density(dgamma(x, shape = 19, scale = 45)))
curve(density(dgamma(shape = 19, scale = 45)))
curve(density(dgamma(x, shape = 19, scale = 45)))
curve(density(1:3))
?curve
density(1:5)
curve(density(1:6))
curve(density(1:6,1:4))
curve(density(dgamma(x, shape = 19, scale = 45)))
curve(dgamma(x, shape = 19, scale = 45))
?density
###############################
require(graphics)
density(faithful$eruptions)
curve(density(faithful$eruptions))
runif(1)
rpois(1)
rpois(1,10)
rpois(1,10)
rpois(1,10)
rpois(1,10)
rpois(1,10)
rpois(1,10)
runif(2)
runif(3)
runif(3)
runif(3)
runif(3)
runif(3)
runif(3)
runif(3)
#偶数结尾，近的哪一个
runif(1)
1/3*x^3-1/2*x^2-6*x+27/2
x=3
1/3*x^3-1/2*x^2-6*x+27/2
x=4
1/3*x^3-1/2*x^2-6*x+27/2
2.8333333*3
17/6
x=-4
1/3*x^3-1/2*x^2-6*x+27/2
8.16666667*6
x=-2
1/3*x^3-1/2*x^2-6*x+27/2
20.83333*6
xxx<--20:20
xxx
lll <- -xxx*log(xxx)-(1-xxx)*log(1-xxx)
lll <- -xxx*log(xxx)-(1-xxx)*log(1-xxx)
xxx<-seq(0,1,0.01)
xxx
xxx[2:99]
xxx[2:100]
xxx<-xxx[2:100]
xxx[2:100]
lll <- -xxx*log(xxx)-(1-xxx)*log(1-xxx)
plot(xxx,lll)
max(lll)
which.max(lll)
xxx<-seq(0,1,0.001)
xxx[2:1000]
lll <- -xxx*log(xxx)-(1-xxx)*log(1-xxx)
which.max(lll)
log(2)/2
log(2)
x = 0:10
y = c(100,90,85,70,60,50,30,-20,-40,-50,-60,-70)
length(y)
x <- 0:11
plot(x,y)
plot(x,y,type = "l")
lines(0,0)
abline(0,0)
library(tm)
download.packages(tm)
download.packages("tm")
install(tm)
install.packages(tm)
install.packages("tm")
install.packages("wordcloud")
library(RColorBrewer)
install.packages("dplyr")
library(tidytext)
install.packages("tidytext")
?tm
library(tm)
install.packages("tm")
library(tm)
library("tm")
install.packages("slam")
packages.used=c("tm", "wordcloud", "RColorBrewer",
"dplyr", "tydytext")
# check packages that need to be installed.
packages.needed=setdiff(packages.used,
intersect(installed.packages()[,1],
packages.used))
# install additional packages
if(length(packages.needed)>0){
install.packages(packages.needed, dependencies = TRUE,
repos='http://cran.us.r-project.org')
}
library(tm)
library(wordcloud)
library(RColorBrewer)
library(dplyr)
library(tidytext)
library("installr")
install.packages("installr")
library("shiny")
??version
wordcloud(selectedData()$dtm.term1,
selectedData()$dtm.count1,
scale=c(4,0.5),
max.words=input$nwords,
min.freq=1,
random.order=FALSE,
rot.per=0,
use.r.layout=FALSE,
random.color=FALSE,
colors=brewer.pal(10,"Blues"),
main=input$speech1)
R.Version()
R.Version()
install.packages("tidytext")
R.version
